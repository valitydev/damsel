name: "Publish to NPM"
description: "Publish to NPM"

inputs:
  npm-token:
    description: The NPM access token to use when publishing
    required: true
  npm-version-not-up:
    description: Version not up
    default: "false"
    required: false
  npm-version-tag:
    description: Version tag
    default: ""
    required: false
  directory:
    description: Directory
    default: "./"
    required: false
  pr-label:
    description: PR label for publish (publish {label})
    default: ""
    required: false
  pr-only-labeled:
    description: Only publish if the PR is labeled
    default: "false"
    required: false

runs:
  using: composite
  steps:
    - name: Package version up
      if: inputs.version-not-up == 'false'
      working-directory: ${{ inputs.directory }}
      run: |
        PREFIX=""
        if [ "${{ inputs.version-tag }}" != "" ]; then
          PREFIX="${{ inputs.version-tag }}-${{ github.event.number }}-"
        fi
        SHA=$(echo "${{ github.event.pull_request.head.sha }}" | cut -c1-7)
        npm version prerelease --preid "${PREFIX}${SHA}" --no-git-tag-version
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
    - name: Publish
      if: >
        inputs.only-labeled == 'false'
        || (contains(env.LABELS, 'publish')
        || (inputs.label != '' && contains(env.LABELS, format('publish {0}', inputs.label))))
      working-directory: ${{ inputs.directory }}
      run: |
        npm publish ${{ inputs.version-tag != '' && format('--tag {0}', inputs.version-tag) || '' }}
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
        LABELS: ${{ github.event.pull_request.labels.*.name }}
